# Generated by Django 5.2.1 on 2025-05-10 12:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('default_web', models.BooleanField(default=True, help_text='Показывать на сайте по умолчанию')),
                ('default_email', models.BooleanField(default=True, help_text='Отправлять по email по умолчанию')),
                ('default_push', models.BooleanField(default=False, help_text='Отправлять push-уведомления по умолчанию')),
            ],
            options={
                'verbose_name': 'Тип уведомления',
                'verbose_name_plural': 'Типы уведомлений',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('level', models.CharField(choices=[('info', 'Информация'), ('success', 'Успех'), ('warning', 'Предупреждение'), ('error', 'Ошибка')], default='info', max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action_url', models.CharField(blank=True, max_length=255)),
                ('is_read', models.BooleanField(default=False)),
                ('is_sent_email', models.BooleanField(default=False)),
                ('is_sent_push', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtype')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'В очереди'), ('sending', 'Отправляется'), ('sent', 'Отправлено'), ('failed', 'Ошибка')], default='pending', max_length=20)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='email_queue', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Очередь email-уведомлений',
                'verbose_name_plural': 'Очередь email-уведомлений',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PushNotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'В очереди'), ('sending', 'Отправляется'), ('sent', 'Отправлено'), ('failed', 'Ошибка')], default='pending', max_length=20)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='push_queue', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Очередь push-уведомлений',
                'verbose_name_plural': 'Очередь push-уведомлений',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='DeviceToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255)),
                ('device_type', models.CharField(choices=[('web', 'Веб-браузер'), ('android', 'Android'), ('ios', 'iOS')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='device_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Токен устройства',
                'verbose_name_plural': 'Токены устройств',
                'unique_together': {('user', 'token')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('web_enabled', models.BooleanField(default=True, help_text='Показывать на сайте')),
                ('email_enabled', models.BooleanField(default=True, help_text='Отправлять по email')),
                ('push_enabled', models.BooleanField(default=False, help_text='Отправлять push-уведомления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtype')),
            ],
            options={
                'verbose_name': 'Настройка уведомлений',
                'verbose_name_plural': 'Настройки уведомлений',
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read', 'created_at'], name='notificatio_recipie_86ea8b_idx'),
        ),
    ]
